package br.com.vendas.model;

import java.io.Serializable;
import java.math.BigDecimal;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.validation.constraints.NotNull;

import org.hibernate.validator.constraints.NotBlank;

@Entity
@Table(name = "produto")
public class Produto implements Serializable 
{
	private static final long serialVersionUID = 1L;
	
	private Long codigo;
	private String nome;
	private Tipo tipo;
	private Marca marca;
	private Categoria categoria;
	private ModeloVidro modeloVidro;
	private Espessura espessura;
	private BigDecimal valorMetro;
	private Integer estoque;
	
												//Método construtor 
//------------------------------------------------------------------------------------------------------------------------
			
//Construtor deixando como padrão de seleção na view o tipo comum de vidro.
	public Produto()
	{
		this.tipo = Tipo.COMUM;
	}

												//Método getters e Setters 
//------------------------------------------------------------------------------------------------------------------------
					
//
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name="cod_produto", nullable = false, unique=true)
	public Long getCodigo() {
		return codigo;
	}

	public void setCodigo(Long codigo) {
		this.codigo = codigo;
	}

	@NotBlank
	@Column(name="nm_produto", nullable = false, unique=false, length=100)
	public String getNome() {
		return nome;
	}

	public void setNome(String nome) {
		this.nome = nome;
	}

	@NotNull
	@Enumerated(EnumType.STRING)
	@Column(name = "nm_tipo", nullable = false)
	public Tipo getTipo() {
		return tipo;
	}

	public void setTipo(Tipo tipo) {
		this.tipo = tipo;
	}

	@NotNull
	@ManyToOne
	@JoinColumn(name= "nm_marca", nullable=false)
	public Marca getMarca() {
		return marca;
	}

	public void setMarca(Marca marca) {
		this.marca = marca;
	}
	
	@NotNull
	@ManyToOne
	@JoinColumn(name="nm_categoria", nullable= false)
	public Categoria getCategoria() {
		return categoria;
	}

	public void setCategoria(Categoria categoria) {
		this.categoria = categoria;
	}

	@NotNull
	@Enumerated
	@Column(name= "nm_modelo", nullable=false)
	public ModeloVidro getModeloVidro() {
		return modeloVidro;
	}

	public void setModeloVidro(ModeloVidro modeloVidro) {
		this.modeloVidro = modeloVidro;
	}
	
	@NotNull
	@Enumerated(EnumType.STRING)
	@Column(name = "nr_espessura", nullable=false)
	public Espessura getEspessura() {
		return espessura;
	}

	public void setEspessura(Espessura espessura) {
		this.espessura = espessura;
	}

	//@NotBlank
	@Column(name="valor_metro", nullable=true, unique=false)
	public BigDecimal getValorMetro() {
		return valorMetro;
	}

	public void setValorMetro(BigDecimal valorMetro) {
		this.valorMetro = valorMetro;
	}

	@Column(name="estoque", nullable=true, unique=false)
	public Integer getEstoque() {
		return estoque;
	}

	public void setEstoque(Integer estoque) {
		this.estoque = estoque;
	}
	
											//Método Equals() e Hashcode() 
//------------------------------------------------------------------------------------------------------------------------

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((codigo == null) ? 0 : codigo.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Produto other = (Produto) obj;
		if (codigo == null) {
			if (other.codigo != null)
				return false;
		} else if (!codigo.equals(other.codigo))
			return false;
		return true;
	}	

}
